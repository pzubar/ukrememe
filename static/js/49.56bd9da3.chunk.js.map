{"version":3,"sources":["models/db.js","views/Article/ArticleComponent.jsx","views/Home/Analytics.jsx","views/Home/Home.jsx"],"names":["firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firestore","title","text","categories","useState","imgSource","setImgSource","html","setHtml","useEffect","container","document","createElement","innerHTML","images","getElementsByTagName","length","src","image","getAttribute","parentNode","removeChild","className","alt","map","cat","style","paddingRight","to","dangerouslySetInnerHTML","__html","initialBar","labels","datasets","label","backgroundColor","borderColor","borderWidth","height","hoverBackgroundColor","hoverBorderColor","data","options","tooltips","enabled","custom","CustomTooltips","scales","yAxes","ticks","beginAtZero","min","maintainAspectRatio","initialPie","categoriesList","persons","periods","events","useMemo","Object","entries","filter","count","type","personsChartData","setPersonsChartData","pieOptions","setPieOptions","redirectTo","setRedirectTo","personsData","name","sort","a","b","slice","onElementsClick","React","useCallback","elems","_model","Col","Card","CardHeader","CardBody","xs","href","Home","articlesList","setArticlesList","randomArticle","setRandomArticle","setCategories","categoriesNumber","keys","articlesNumber","ref","once","then","snapshot","val","articles","titles","titlesList","randomTitle","Math","floor","random","db","collection","doc","get","exists","console","log","Row","marginTop","sm","lg","margin","ArticleComponent","columnCount","article","Analytics"],"mappings":"+GAAA,sCAAMA,EAAWC,EAAQ,KACzBA,EAAQ,KACRA,EAAQ,KAaRD,EAASE,cAXc,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKV,IAAMC,EAAWX,EAASW,WAElBX,MAASY,a,yFCfT,gBAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAAgB,EACZC,oBAAS,GADG,gCAEVA,mBAAS,KAFC,mBAErCC,EAFqC,KAE1BC,EAF0B,OAGpBF,mBAAS,IAHW,mBAGrCG,EAHqC,KAG/BC,EAH+B,KAqB5C,OAhBAC,qBAAU,WACR,IAAMC,EAAYC,SAASC,cAAc,OACzCF,EAAUG,UAAYX,EACtB,IAAMY,EAASJ,EAAUK,qBAAqB,OAC9C,GAAID,EAAOE,QAAUF,EAAO,GAAGG,IAAK,CAAC,IAC5BC,EAD2B,YAClBJ,EADkB,MAGlCR,EAAaY,EAAMC,aAAa,QAChCD,EAAME,WAAWC,YAAYH,GAC7BV,EAAQE,EAAUG,gBAElBL,EAAQN,KAGT,CAACA,IAGF,kBAAC,IAAD,CAAMoB,UAAW,WACdjB,GAAa,yBAAKiB,UAAU,eAAeL,IAAKZ,EAAWkB,IAAI,aAChE,kBAAC,IAAD,KACE,4BAAKtB,GACJE,EAAWa,QAAW,6BACrB,sFADqB,IACFb,EAAWqB,KAAI,SAAAC,GAAG,OAAI,0BAAMC,MAAO,CAACC,aAAc,IACvE,kBAAC,OAAD,CAAMC,GAAE,sBAAiBH,IAAzB,IAAkCA,QAElC,yBAAKI,wBAAyB,CAACC,OAAQvB,S,4yBC5B/C,IAAMwB,EAAa,CACjBC,OAAQ,GACRC,SAAU,CACR,CACEC,MAAO,iHACPC,gBAAiB,uBACjBC,YAAa,qBACbC,YAAa,EACbC,OAAQ,IACRC,qBAAsB,uBACtBC,iBAAkB,qBAClBC,KAAM,MAKNC,EAAU,CACdC,SAAU,CACRC,SAAS,EACTC,OAAQC,kBAEVC,OAAQ,CACNC,MAAO,CAAC,CACNC,MAAO,CACLC,aAAa,EACbC,IAAK,MAIXC,qBAAqB,GAGjBC,EAAa,CACjBrB,OAAQ,GACRC,SAAU,CACR,CACEQ,KAAM,CAAC,IAAK,GAAI,KAChBN,gBAAiB,CACf,UACA,UACA,WAEFI,qBAAsB,CACpB,UACA,UACA,cAKO,cAAwC,IAAtCe,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,QACzBC,GAD8C,EAAZC,OACxBC,mBAAQ,kBACpBC,OAAOC,QAAQN,GAAgBO,QAAO,sCAAKC,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,KAAZ,OAAuBD,GAAkB,+CAATC,OACxE,CAACT,KAHiD,EAIJlD,mBAAS2B,GAJL,mBAI7CiC,EAJ6C,KAI3BC,EAJ2B,OAKhB7D,mBAASiD,GALO,mBAK7Ca,EAL6C,KAKjCC,EALiC,OAMhB/D,mBAAS,IANO,mBAM7CgE,EAN6C,KAMjCC,EANiC,KAQpD5D,qBAAU,WACR,GAAK8C,GAAYA,EAAQvC,OAAzB,CAEA,IAAMsD,EAAcf,EACjB/B,KAAI,6CAAoB+C,KAApB,eACJC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEX,MAAQY,EAAEZ,OAAU,EAAI,KAC1Ca,MAAM,EAAG,IACZV,EAAoB,CAClBjC,OAAQsC,EAAY9C,KAAI,qBAAE+C,QAC1BtC,SAAU,CAAC,EAAD,GAAKF,EAAWE,SAAS,GAAzB,CAA6BQ,KAAM6B,EAAY9C,KAAI,qBAAEsC,iBAEhE,CAACP,IAEJ9C,qBAAU,WACR,IAAMgE,EAAI,CACRzC,OAAQwB,EAAQhC,KAAI,0CACpBS,SAAU,CAAC,EAAD,GAAKoB,EAAWpB,SAAS,GAAzB,CAA6BQ,KAAMe,EAAQhC,KAAI,uCAAqBsC,aAGhFK,EAAcM,KACb,CAACjB,IAEJ,IAAMoB,EAAkBC,IAAMC,aAAY,SAACC,GAAW,IAE7C7C,EAF4C,YAC1B6C,EAD0B,MAEpBC,OAAxB9C,MAEPmC,EAAcnC,KACb,IAEH,OACE,kBAAC+C,EAAA,EAAD,KACGb,GAAc,kBAAC,IAAD,CAAUxC,GAAE,sBAAiBwC,KAC5C,kBAACc,EAAA,EAAD,CAAMxD,MAAO,CAACY,OAAQ,MACpB,kBAAC6C,EAAA,EAAD,4HAEE,yBAAK7D,UAAU,uBACb,2BAAOA,UAAU,cAAjB,yOAGJ,kBAAC8D,EAAA,EAAD,KACE,yBAAK9D,UAAU,iBACb,kBAAC,IAAD,CAAKmB,KAAMuB,EAAkBtB,QAASA,EAASkC,gBAAiBA,EAAiBtC,OAAQ,SAI/F,kBAAC2C,EAAA,EAAD,CAAKI,GAAG,MACN,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,+GAEE,yBAAK7D,UAAU,uBACb,uBAAGgE,KAAK,yBAAyBhE,UAAU,sBACzC,2BAAOA,UAAU,cAAjB,WAIN,kBAAC8D,EAAA,EAAD,KACE,yBAAK9D,UAAU,iBACb,kBAAC,IAAD,CAAKmB,KAAMyB,EAAYU,gBAAiBA,UCuCvCW,UAnJF,WAAO,IAAD,EACuBnF,mBAAS,IADhC,mBACVoF,EADU,KACIC,EADJ,OAEyBrF,mBAAS,MAFlC,mBAEVsF,EAFU,KAEKC,EAFL,OAGuBvF,mBAAS,IAHhC,mBAGVkD,EAHU,KAGMsC,EAHN,KAIXC,EAAmBnC,mBAAQ,kBAAMC,OAAOmC,KAAKxC,GAAgBtC,SAAQ,CAACsC,IACtEyC,EAAiBrC,mBAAQ,kBAAM8B,EAAaxE,SAAQ,CAACwE,IACrDjC,EAAUG,mBAAQ,kBACpBC,OAAOC,QAAQN,GAAgBO,QAAO,sCAAKC,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,KAAZ,OAAuBD,GAAkB,+CAATC,OACxE,CAACT,IACGG,EAASC,mBAAQ,kBACnBC,OAAOC,QAAQN,GAAgBO,QAAO,sCAAKC,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,KAAZ,OAAuBD,GAAkB,mCAATC,OACxE,CAACT,IAgEH,OA9DA7C,qBAAU,WACRV,IAASiG,IAAI,KAAKC,KAAK,SAASC,MAAK,SAAUC,GAAW,IAAD,EACxBA,EAASC,MAAjCC,EADgD,EAChDA,SAAUlG,EADsC,EACtCA,WACVmG,EAAiBD,EAAjBC,OACDC,GADkBF,EAATvC,MACIH,OAAOmC,KAAKQ,IACzBE,EAAcD,EAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWvF,SAErE4F,IAAGC,WAAW,YACXC,IAAIN,GACJO,MACAb,MAAK,SAAUY,GACd,GAAIA,EAAIE,OAAQ,CACdC,QAAQC,IAAI,iBAAkBJ,EAAIrE,QADpB,MAEaqE,EAAIrE,OAAxBvC,EAFO,EAEPA,KAAMC,EAFC,EAEDA,WAEbwF,EAAiB,CAAC1F,MAAOuG,EAAatG,OAAMC,oBAE5C8G,QAAQC,IAAI,wBAGlBtB,EAAczF,GACdsF,EAAgB9B,OAAOmC,KAAKQ,SAuC7B,IAGD,yBAAKhF,UAAU,mBACb,kBAAC6F,EAAA,EAAD,CAAKzF,MAAO,CAAC0F,UAAW,KACtB,kBAACnC,EAAA,EAAD,CAAKI,GAAG,MACN,2BAAG,4GAEL,kBAACJ,EAAA,EAAD,CAAKI,GAAG,KAAKgC,GAAG,IAAIC,GAAG,KACrB,kBAACpC,EAAA,EAAD,CAAM5D,UAAU,sBACd,kBAAC8D,EAAA,EAAD,KACE,yBAAK9D,UAAU,cAAcyE,GAC7B,oHAIN,kBAACd,EAAA,EAAD,CAAKI,GAAG,KAAKgC,GAAG,IAAIC,GAAG,KACrB,kBAACpC,EAAA,EAAD,CAAM5D,UAAU,yBACd,kBAAC8D,EAAA,EAAD,KACE,yBAAK9D,UAAU,cAAcuE,GAC7B,+HAIN,kBAACZ,EAAA,EAAD,CAAKI,GAAG,KAAKgC,GAAG,IAAIC,GAAG,KACrB,kBAACpC,EAAA,EAAD,CAAM5D,UAAU,yBACd,kBAAC8D,EAAA,EAAD,KACE,yBAAK9D,UAAU,cAAciC,EAAQvC,QACrC,qIAIN,kBAACiE,EAAA,EAAD,CAAKI,GAAG,KAAKgC,GAAG,IAAIC,GAAG,KACrB,kBAACpC,EAAA,EAAD,CAAM5D,UAAU,wBACd,kBAAC8D,EAAA,EAAD,KACE,yBAAK9D,UAAU,cAAcmC,EAAOzC,QACpC,wGAKP0E,GACD,kBAACyB,EAAA,EAAD,KACI,2BAAG,2HACL,kBAAClC,EAAA,EAAD,CAAKI,GAAG,KAAKgC,GAAG,IAAI3F,MAAO,CAAC6F,OAAQ,WAClC,kBAACC,EAAA,EACK9B,KAKV,kBAACyB,EAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,mFAGA,kBAACC,EAAA,EAAD,CAAU1D,MAAO,CAAC+F,YAAa,IAC5BjC,EAAahE,KAAI,SAAAkG,GAAO,OAAI,yBAAKpG,UAAW,gBAAgB,kBAAC,OAAD,CAAMM,GAAE,mBAAc8F,IAAYA,WAKvG,kBAACP,EAAA,EAAD,KACE,kBAACQ,EAAD,CACErE,eAAgBA,EAChBC,QAASA,EACTE,OAAQA","file":"static/js/49.56bd9da3.chunk.js","sourcesContent":["const firebase = require(\"firebase\");\nrequire(\"firebase/database\");\nrequire(\"firebase/firestore\");\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDT8vtFi9U-hOJw6Gk6k8LOx9Jya8KBDgc\",\n  authDomain: \"ukrmemeswiki.firebaseapp.com\",\n  databaseURL: \"https://ukrmemeswiki.firebaseio.com\",\n  projectId: \"ukrmemeswiki\",\n  storageBucket: \"\",\n  messagingSenderId: \"925209845247\",\n  appId: \"1:925209845247:web:aab80a95594b9e604f1bca\",\n  measurementId: \"G-5MV7LGZSB9\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const database = firebase.database();\n\nexport default firebase.firestore();\n","import React, {useState, useEffect} from 'react';\nimport {Card, CardBody, CardHeader, Col, Row} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\n\nexport default ({title, text, categories}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [imgSource, setImgSource] = useState('');\n  const [html, setHtml] = useState('');\n\n  useEffect(() => {\n    const container = document.createElement('div');\n    container.innerHTML = text;\n    const images = container.getElementsByTagName('img');\n    if (images.length && images[0].src) {\n      const [image] = images;\n\n      setImgSource(image.getAttribute('src'));\n      image.parentNode.removeChild(image);\n      setHtml(container.innerHTML)\n    } else {\n      setHtml(text)\n    }\n    // return span.textContent || span.innerText;\n  }, [text]);\n\n  return (\n    <Card className={\"article\"}>\n      {imgSource && <img className=\"card-img-top\" src={imgSource} alt=\"Card cap\"/>}\n      <CardBody>\n        <h1>{title}</h1>\n        {categories.length && (<div>\n          <b>Категорії:</b> {categories.map(cat => <span style={{paddingRight: 5}}>\n        <Link to={`/categories/${cat}`}>#{cat}</Link></span>)}\n        </div>)}\n        <div dangerouslySetInnerHTML={{__html: html}}/>\n      </CardBody>\n    </Card>\n  )\n};\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {Card, CardBody, CardHeader, Col} from \"reactstrap\";\nimport {Bar, Pie} from \"react-chartjs-2\";\nimport {CustomTooltips} from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\nimport {Redirect} from \"react-router-dom\";\n\nconst initialBar = {\n  labels: [],\n  datasets: [\n    {\n      label: 'Kількість публікацій',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      height: 500,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [],\n    },\n  ],\n};\n\nconst options = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: true,\n        min: 0\n      }\n    }]\n  },\n  maintainAspectRatio: false\n};\n\nconst initialPie = {\n  labels: [],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: [\n        '#FF6384',\n        '#36A2EB',\n        '#FFCE56',\n      ],\n      hoverBackgroundColor: [\n        '#FF6384',\n        '#36A2EB',\n        '#FFCE56',\n      ],\n    }],\n};\n\nexport default ({categoriesList, persons, events}) => {\n  const periods = useMemo(() =>\n      Object.entries(categoriesList).filter(([, {count, type}]) => count && type === \"Періоди\"),\n    [categoriesList]);\n  const [personsChartData, setPersonsChartData] = useState(initialBar);\n  const [pieOptions, setPieOptions] = useState(initialPie);\n  const [redirectTo, setRedirectTo] = useState('');\n\n  useEffect(() => {\n    if (!persons || !persons.length)\n      return;\n    const personsData = persons\n      .map(([key, value]) => ({name: key, ...value}))\n      .sort((a, b) => (a.count > b.count) ? -1 : 1)\n      .slice(0, 10);\n    setPersonsChartData({\n      labels: personsData.map(({name}) => name),\n      datasets: [{...initialBar.datasets[0], data: personsData.map(({count}) => count)}]\n    })\n  }, [persons]);\n\n  useEffect(() => {\n    const a = {\n      labels: periods.map(([key]) => key),\n      datasets: [{...initialPie.datasets[0], data: periods.map(([, value]) => value.count)}]\n    };\n\n    setPieOptions(a)\n  }, [periods]);\n\n  const onElementsClick = React.useCallback((elems) => {\n    const [clickedElement] = elems;\n    const {label} = clickedElement._model;\n\n    setRedirectTo(label)\n  }, []);\n\n  return (\n    <Col>\n      {redirectTo && <Redirect to={`/categories/${redirectTo}`}/>}\n      <Card style={{height: 600}}>\n        <CardHeader>\n          ТОП меметичних персон\n          <div className=\"card-header-actions\">\n            <small className=\"text-muted\">Хто найчастіше фігурує в українських мемах</small>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <div className=\"chart-wrapper\">\n            <Bar data={personsChartData} options={options} onElementsClick={onElementsClick} height={500}/>\n          </div>\n        </CardBody>\n      </Card>\n      <Col xs=\"12\">\n        <Card>\n          <CardHeader>\n            Періодизація мемів\n            <div className=\"card-header-actions\">\n              <a href=\"http://www.chartjs.org\" className=\"card-header-action\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <div className=\"chart-wrapper\">\n              <Pie data={pieOptions} onElementsClick={onElementsClick}/>\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    </Col>\n  )\n}\n","import React, {Component, useState, useEffect, useMemo} from 'react';\nimport {Card, CardBody, CardColumns, CardHeader, Col, Row} from \"reactstrap\";\nimport db from '../../models/db.js'\nimport {Link} from 'react-router-dom';\nimport {database} from \"../../models/db\";\nimport test from './test'\nimport Highcharts from 'highcharts';\nimport HighchartsReact from \"highcharts-react-official\";\nimport {Bar, Line} from \"react-chartjs-2\";\nimport {CustomTooltips} from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\nimport ArticleComponent from \"../Article/ArticleComponent\";\nimport Analytics from \"./Analytics\";\n\nconst Home = () => {\n  const [articlesList, setArticlesList] = useState([]);\n  const [randomArticle, setRandomArticle] = useState(null);\n  const [categoriesList, setCategories] = useState({});\n  const categoriesNumber = useMemo(() => Object.keys(categoriesList).length, [categoriesList]);\n  const articlesNumber = useMemo(() => articlesList.length, [articlesList]);\n  const persons = useMemo(() =>\n      Object.entries(categoriesList).filter(([, {count, type}]) => count && type === \"Персони\"),\n    [categoriesList]);\n  const events = useMemo(() =>\n      Object.entries(categoriesList).filter(([, {count, type}]) => count && type === \"Події\"),\n    [categoriesList]);\n\n  useEffect(() => {\n    database.ref('/').once('value').then(function (snapshot) {\n      const {articles, categories} = snapshot.val();\n      const {titles, count} = articles;\n      const titlesList = Object.keys(titles);\n      const randomTitle = titlesList[Math.floor(Math.random() * titlesList.length)];\n\n      db.collection(\"articles\")\n        .doc(randomTitle)\n        .get()\n        .then(function (doc) {\n          if (doc.exists) {\n            console.log(\"Document data:\", doc.data());\n            const {text, categories} = doc.data();\n\n            setRandomArticle({title: randomTitle, text, categories})\n          } else {\n            console.log(\"No such document!\");\n          }\n        });\n      setCategories(categories);\n      setArticlesList(Object.keys(titles))\n    });\n    // const {articles, categories} = test;\n    // debugger;\n    // setArticlesList(Object.keys(articles.titles));\n    // setCategories(categories);\n    // const categories = {};\n    // const result = [];\n    // const articles = {};\n    // db.collection(\"categories\").get().then(querySnapshot => {\n    //   querySnapshot.forEach(function(doc) {\n    //     // doc.data() is never undefined for query doc snapshots\n    //     // console.log(doc.id, \" => \", doc.data());\n    //     result.push({title: doc.id, data: doc.data()})\n    //     categories[doc.id] = {};\n    //     categories[doc.id].type = doc.data().type\n    //     //doc.data();\n    //\n    //   });\n    // });\n    // db.collection(\"articles\").get().then(function(querySnapshot) {\n    //   const result = [];\n    //   debugger;\n    //   querySnapshot.forEach(function(doc) {\n    //     // doc.data() is never undefined for query doc snapshots\n    //     // console.log(doc.id, \" => \", doc.data());\n    //     result.push({title: doc.id, data: doc.data()});\n    //     // if (doc.data().categories)categories\n    //     articles[doc.id] = doc.data();\n    //   });\n    //   debugger;\n    //   // let a = result.result\n    //   let titles = {};\n    //   result.forEach(({title}) => titles[title] = true);\n    //   // const titles = result.map(({title}) => title);\n    //   debugger;\n    //   setArticlesList(result);\n    // });\n    // debugger;\n  }, []);\n\n  return (\n    <div className=\"animated fadeIn\">\n      <Row style={{marginTop: 20}}>\n        <Col xs=\"12\">\n          <p><b>Зараз на сайті:</b></p>\n        </Col>\n        <Col xs=\"12\" sm=\"3\" lg=\"3\">\n          <Card className=\"text-white bg-info\">\n            <CardBody>\n              <div className=\"text-value\">{articlesNumber}</div>\n              <div>Статей про меми</div>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs=\"12\" sm=\"3\" lg=\"3\">\n          <Card className=\"text-white bg-primary\">\n            <CardBody>\n              <div className=\"text-value\">{categoriesNumber}</div>\n              <div>Категорій статей</div>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs=\"12\" sm=\"3\" lg=\"3\">\n          <Card className=\"text-white bg-warning\">\n            <CardBody>\n              <div className=\"text-value\">{persons.length}</div>\n              <div>Меметичних персон</div>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs=\"12\" sm=\"3\" lg=\"3\">\n          <Card className=\"text-white bg-danger\">\n            <CardBody>\n              <div className=\"text-value\">{events.length}</div>\n              <div>Мемних подій</div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      {randomArticle &&\n      <Row>\n          <p><b>Випадкова стаття</b></p>\n        <Col xs=\"12\" sm=\"6\" style={{margin: \"0 auto\"}}>\n          <ArticleComponent\n            {...randomArticle}\n          />\n        </Col>\n      </Row>\n      }\n      <Row>\n        <Col>\n          <Card>\n            <CardHeader>\n              Список статей:\n            </CardHeader>\n            <CardBody style={{columnCount: 3}}>\n              {articlesList.map(article => <div className={\"article-link\"}><Link to={`/article/${article}`}>{article}</Link></div>)}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Analytics\n          categoriesList={categoriesList}\n          persons={persons}\n          events={events}\n        />\n      </Row>\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}