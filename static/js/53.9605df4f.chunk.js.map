{"version":3,"sources":["models/db.js","views/Editor/index.jsx"],"names":["firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","ArticleEditor","props","useState","EditorState","createEmpty","editorState","setEditorState","title","setTitle","categoriesList","setCategories","allCategories","setAllCategories","htmlContent","useMemo","draftToHtml","convertToRaw","getCurrentContent","useEffect","collection","get","then","querySnapshot","forEach","doc","push","id","name","catch","error","console","log","className","xs","sm","htmlFor","type","required","value","onChange","target","wrapperClassName","editorClassName","onEditorStateChange","tags","suggestions","handleDelete","i","filter","tag","index","handleAddition","autofocus","block","color","disabled","onClick","categories","map","set","text","length","undefined","history","dangerouslySetInnerHTML","__html"],"mappings":"+GAAA,IAAMA,EAAWC,EAAQ,KAEzBA,EAAQ,KAaRD,EAASE,cAXc,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjB,IAAMC,EAAKX,EAASY,YAELD,O,uOCoGAE,UA9GO,SAACC,GAAW,IAAD,EACOC,oBAAS,kBAAMC,cAAYC,iBADlC,mBACxBC,EADwB,KACXC,EADW,OAELJ,mBAAS,IAFJ,mBAExBK,EAFwB,KAEjBC,EAFiB,OAGSN,mBAAS,IAHlB,mBAGxBO,EAHwB,KAGRC,EAHQ,OAIWR,mBAAS,IAJpB,mBAIxBS,EAJwB,KAITC,EAJS,KAKzBC,EAAcC,mBAAQ,kBAAMC,IAAYC,uBAAaX,EAAYY,wBAAuB,CAACZ,IAwB/Fa,qBAAU,WACRpB,IAAGqB,WAAW,cACXC,MACAC,MAAK,SAAUC,GACd,IAAMX,EAAgB,GACtBW,EAAcC,SAAQ,SAAUC,GAE9Bb,EAAcc,KAAK,CAACC,GAAIF,EAAIE,GAAIC,KAAMH,EAAIE,QAE5Cd,EAAiBD,MAElBiB,OAAM,SAAUC,GACfC,QAAQC,IAAI,4BAA6BF,QAE5C,IAUH,OACE,yBAAKG,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,KAAKC,GAAG,KACd,kBAAC,IAAD,KACE,kBAAC,IAAD,yDAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,QAAQ,QAAf,0DACA,kBAAC,IAAD,CAAOC,KAAK,OAAOC,UAAQ,EAACC,MAAO/B,EAC5BgC,SA1CH,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACtBhC,EAASgC,EAAOF,aA6CN,kBAAC,SAAD,CACEG,iBAAiB,eACjBC,gBAAgB,iBAChBC,oBAAqBrC,IAEvB,6BACE,kBAAC,IAAD,CACEsC,KAAMnC,EACNoC,YAAalC,EACbmC,aA/BK,SAACC,GACpBrC,EAAcD,EAAeuC,QAAO,SAACC,EAAKC,GAAN,OAAgBA,IAAUH,OA+BhDI,eApCO,SAACF,GACtBvC,EAAc,GAAD,mBAAKD,GAAL,CAAqBwC,MAoCpBG,WAAW,KAGf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,OAAK,EAACC,MAAM,UAAUC,UAAWhD,IAAUF,EAAamD,QA/EpD,WACxB,IAAMC,EAAahD,EAAeiD,KAAI,qBAAEhC,MAIxC5B,IAAGqB,WAAW,YAAYK,IAAIjB,GAAOoD,IAAI,CACvCC,KAAM/C,EACN4C,WAAYhD,EAAeoD,OAASJ,OAAaK,IAEhDzC,MAAK,WACJS,QAAQC,IAAI,kCACZ9B,EAAM8D,QAAQtC,KAAK,YAEpBG,OAAM,SAAUC,GACfC,QAAQD,MAAM,2BAA4BA,QAiElC,wDAQR,kBAAC,IAAD,CAAKI,GAAG,KAAKC,GAAG,KACd,kBAAC,IAAD,KACE,kBAAC,IAAD,+DAGA,kBAAC,IAAD,KACE,4BAAK3B,GACL,yBAAKyD,wBAAyB,CAACC,OAAQpD","file":"static/js/53.9605df4f.chunk.js","sourcesContent":["const firebase = require(\"firebase\");\n// Required for side-effects\nrequire(\"firebase/firestore\");\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDT8vtFi9U-hOJw6Gk6k8LOx9Jya8KBDgc\",\n  authDomain: \"ukrmemeswiki.firebaseapp.com\",\n  databaseURL: \"https://ukrmemeswiki.firebaseio.com\",\n  projectId: \"ukrmemeswiki\",\n  storageBucket: \"\",\n  messagingSenderId: \"925209845247\",\n  appId: \"1:925209845247:web:aab80a95594b9e604f1bca\",\n  measurementId: \"G-5MV7LGZSB9\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport default db;\n","import React, {useState, useMemo, useEffect} from 'react';\nimport {convertToRaw, EditorState} from 'draft-js';\nimport {Editor} from 'react-draft-wysiwyg';\nimport {Button, Card, CardBody, CardHeader, Col, FormGroup, Input, Label, Row} from \"reactstrap\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport ReactTags from 'react-tag-autocomplete'\nimport db from '../../models/db.js'\n\nconst ArticleEditor = (props) => {\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n  const [title, setTitle] = useState('');\n  const [categoriesList, setCategories] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const htmlContent = useMemo(() => draftToHtml(convertToRaw(editorState.getCurrentContent())), [editorState]);\n\n  const onSaveButtonClick = () => {\n    const categories = categoriesList.map(({id}) => id);\n\n    // TODO: IMPLEMENT func to fetch to db OR create another container for editor (mb second is best)\n\n    db.collection(\"articles\").doc(title).set({\n      text: htmlContent,\n      categories: categoriesList.length ? categories : undefined\n    })\n      .then(function () {\n        console.log(\"Document successfully written!\");\n        props.history.push('/home')\n      })\n      .catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n  };\n\n  const onTitleChange = ({target}) => {\n    setTitle(target.value);\n  };\n\n  useEffect(() => {\n    db.collection(\"categories\")\n      .get()\n      .then(function (querySnapshot) {\n        const allCategories = [];\n        querySnapshot.forEach(function (doc) {\n          // console.log(doc.id, \" => \", doc.data());\n          allCategories.push({id: doc.id, name: doc.id})\n        });\n        setAllCategories(allCategories)\n      })\n      .catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n  }, []);\n\n  const handleAddition = (tag) => {\n    setCategories([...categoriesList, tag]);\n  };\n\n  const handleDelete = (i) => {\n    setCategories(categoriesList.filter((tag, index) => index !== i))\n  };\n\n  return (\n    <div className=\"animated fadeIn\">\n      <Row>\n        <Col xs=\"12\" sm=\"6\">\n          <Card>\n            <CardHeader>\n              Редактор\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col xs=\"12\">\n                  <FormGroup>\n                    <Label htmlFor=\"name\">Заголовок</Label>\n                    <Input type=\"text\" required value={title}\n                           onChange={onTitleChange}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Editor\n                wrapperClassName=\"demo-wrapper\"\n                editorClassName=\"article-editor\"\n                onEditorStateChange={setEditorState}\n              />\n              <div>\n                <ReactTags\n                  tags={categoriesList}\n                  suggestions={allCategories}\n                  handleDelete={handleDelete}\n                  handleAddition={handleAddition}\n                  autofocus={false}\n                />\n              </div>\n              <Row>\n                <Button block color=\"primary\" disabled={!title || !editorState} onClick={onSaveButtonClick}>\n                  Зберегти\n                </Button>\n              </Row>\n            </CardBody>\n\n          </Card>\n        </Col>\n        <Col xs=\"12\" sm=\"6\">\n          <Card>\n            <CardHeader>\n              Результат\n            </CardHeader>\n            <CardBody>\n              <h1>{title}</h1>\n              <div dangerouslySetInnerHTML={{__html: htmlContent}}/>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default ArticleEditor\n"],"sourceRoot":""}